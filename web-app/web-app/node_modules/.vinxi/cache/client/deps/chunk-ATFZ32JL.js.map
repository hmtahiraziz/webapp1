{
  "version": 3,
  "sources": ["../../../../../../../node_modules/@mantine/store/src/store.ts"],
  "sourcesContent": ["import { useSyncExternalStore } from 'react';\n\nexport type MantineStoreSubscriber<Value> = (value: Value) => void;\ntype SetStateCallback<Value> = (value: Value) => Value;\n\nexport interface MantineStore<Value> {\n  getState: () => Value;\n  setState: (value: Value | SetStateCallback<Value>) => void;\n  updateState: (value: Value | SetStateCallback<Value>) => void;\n  initialize: (value: Value) => void;\n  subscribe: (callback: MantineStoreSubscriber<Value>) => () => void;\n}\n\nexport type MantineStoreValue<Store extends MantineStore<any>> = ReturnType<Store['getState']>;\n\nexport function createStore<Value extends Record<string, any>>(\n  initialState: Value\n): MantineStore<Value> {\n  let state = initialState;\n  let initialized = false;\n  const listeners = new Set<MantineStoreSubscriber<Value>>();\n\n  return {\n    getState() {\n      return state;\n    },\n\n    updateState(value) {\n      state = typeof value === 'function' ? value(state) : value;\n    },\n\n    setState(value) {\n      this.updateState(value);\n      listeners.forEach((listener) => listener(state));\n    },\n\n    initialize(value) {\n      if (!initialized) {\n        state = value;\n        initialized = true;\n      }\n    },\n\n    subscribe(callback) {\n      listeners.add(callback);\n      return () => listeners.delete(callback);\n    },\n  };\n}\n\nexport function useStore<Store extends MantineStore<any>>(store: Store) {\n  return useSyncExternalStore<MantineStoreValue<Store>>(\n    store.subscribe,\n    () => store.getState(),\n    () => store.getState()\n  );\n}\n"],
  "mappings": ";;;;;;;;;AAeO,SAAS,YACd,cACqB;AACrB,MAAI,QAAQ;AACZ,MAAI,cAAc;AACZ,QAAA,YAAA,oBAAgB,IAAmC;AAElD,SAAA;IACL,WAAW;AACF,aAAA;IACT;IAEA,YAAY,OAAO;AACjB,cAAQ,OAAO,UAAU,aAAa,MAAM,KAAK,IAAI;IACvD;IAEA,SAAS,OAAO;AACd,WAAK,YAAY,KAAK;AACtB,gBAAU,QAAQ,CAAC,aAAa,SAAS,KAAK,CAAC;IACjD;IAEA,WAAW,OAAO;AAChB,UAAI,CAAC,aAAa;AACR,gBAAA;AACM,sBAAA;MAAA;IAElB;IAEA,UAAU,UAAU;AAClB,gBAAU,IAAI,QAAQ;AACf,aAAA,MAAM,UAAU,OAAO,QAAQ;IAAA;EAE1C;AACF;AAEO,SAAS,SAA0C,OAAc;AAC/D,aAAA;IACL,MAAM;IACN,MAAM,MAAM,SAAS;IACrB,MAAM,MAAM,SAAS;EACvB;AACF;",
  "names": []
}
